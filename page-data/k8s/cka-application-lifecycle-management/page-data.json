{"componentChunkName":"component---src-templates-blog-post-js","path":"/k8s/cka-application-lifecycle-management/","result":{"data":{"site":{"siteMetadata":{"title":"Heeye Blog","author":"heeye","siteUrl":"https://heeyeah.github.io","comment":{"disqusShortName":"","utterances":"heeyeah/heeyeah.github.io"},"sponsor":{"buyMeACoffeeId":"heeyeah"}}},"markdownRemark":{"id":"e08af987-23c7-5efb-8a9c-98333308b5b6","excerpt":"📌Application Lifecycle Management Rolling Updates and Rollbacks   StrategyType Recreate RollingUpdate Upgrades Rollback  Commands and Arguments Docker의 Entrypoint랑 cmd 차이 pod의 command와 argument의 문법(?) - double qoutes Docker entrypoint나 cmd에 상관없이 pod에 설정해놓은 것 따라감 Environment…","html":"<h2 id=\"application-lifecycle-management\" style=\"position:relative;\"><a href=\"#application-lifecycle-management\" aria-label=\"application lifecycle management permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📌Application Lifecycle Management</h2>\n<h3 id=\"rolling-updates-and-rollbacks\" style=\"position:relative;\"><a href=\"#rolling-updates-and-rollbacks\" aria-label=\"rolling updates and rollbacks permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Rolling Updates and Rollbacks</h3>\n<p><code class=\"language-text\">kubectl rollout status deployment/myapp-deployment</code></p>\n<p><code class=\"language-text\">kubectl rollout history deployment/myapp-deployment</code></p>\n<p>StrategyType</p>\n<ul>\n<li>Recreate</li>\n<li>RollingUpdate</li>\n<li>Upgrades</li>\n<li>\n<p>Rollback</p>\n<p><code class=\"language-text\">kubectl rollout undo deployment/myapp-deployment</code></p>\n</li>\n</ul>\n<h3 id=\"commands-and-arguments\" style=\"position:relative;\"><a href=\"#commands-and-arguments\" aria-label=\"commands and arguments permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Commands and Arguments</h3>\n<ul>\n<li>Docker의 Entrypoint랑 cmd 차이</li>\n<li>pod의 command와 argument의 문법(?) - double qoutes</li>\n<li>Docker entrypoint나 cmd에 상관없이 pod에 설정해놓은 것 따라감</li>\n</ul>\n<h3 id=\"environment-variables\" style=\"position:relative;\"><a href=\"#environment-variables\" aria-label=\"environment variables permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Environment Variables</h3>\n<p>요렇게 pod에다가 <code class=\"language-text\">configMapKeyRef</code>를 설정해서 사용하고!</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Pod\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> dapi<span class=\"token punctuation\">-</span>test<span class=\"token punctuation\">-</span>pod\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> test<span class=\"token punctuation\">-</span>container\n      <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> k8s.gcr.io/busybox\n      <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"/bin/echo\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"$(SPECIAL_LEVEL_KEY) $(SPECIAL_TYPE_KEY)\"</span> <span class=\"token punctuation\">]</span>\n      <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> SPECIAL_LEVEL_KEY\n          <span class=\"token key atrule\">valueFrom</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">configMapKeyRef</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> special<span class=\"token punctuation\">-</span>config\n              <span class=\"token key atrule\">key</span><span class=\"token punctuation\">:</span> SPECIAL_LEVEL\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> SPECIAL_TYPE_KEY\n          <span class=\"token key atrule\">valueFrom</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">configMapKeyRef</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> special<span class=\"token punctuation\">-</span>config\n              <span class=\"token key atrule\">key</span><span class=\"token punctuation\">:</span> SPECIAL_TYPE\n  <span class=\"token key atrule\">restartPolicy</span><span class=\"token punctuation\">:</span> Never</code></pre></div>\n<p>configmap은 이렇게 만듭니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> ConfigMap\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> game<span class=\"token punctuation\">-</span>demo\n<span class=\"token key atrule\">data</span><span class=\"token punctuation\">:</span>\n  <span class=\"token comment\"># property-like keys; each key maps to a simple value</span>\n  <span class=\"token key atrule\">player_initial_lives</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"3\"</span>\n  <span class=\"token key atrule\">ui_properties_file_name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"user-interface.properties\"</span>\n\n  <span class=\"token comment\"># file-like keys</span>\n  <span class=\"token key atrule\">game.properties</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n    enemy.types=aliens,monsters\n    player.maximum-lives=5    </span>\n  <span class=\"token key atrule\">user-interface.properties</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n    color.good=purple\n    color.bad=yellow\n    allow.textmode=true    </span></code></pre></div>\n<h3 id=\"secrets\" style=\"position:relative;\"><a href=\"#secrets\" aria-label=\"secrets permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Secrets</h3>\n<p>create secret!</p>\n<p><code class=\"language-text\">kubectl create secret generic db-secret --from-literal=DB_Host=sql01  --from-literal=DB_User=root --from-literal=DB_Password=password123</code></p>\n<p>이건 secret참고하는 pod 만들 때 사용하는 yaml</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Pod\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> webapp<span class=\"token punctuation\">-</span>pod\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> webapp<span class=\"token punctuation\">-</span>pod\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> default\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> kodekloud/simple<span class=\"token punctuation\">-</span>webapp<span class=\"token punctuation\">-</span>mysql\n    <span class=\"token key atrule\">imagePullPolicy</span><span class=\"token punctuation\">:</span> Always\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> webapp\n    <span class=\"token key atrule\">envFrom</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">secretRef</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> db<span class=\"token punctuation\">-</span>secret</code></pre></div>\n<h3 id=\"multi-container-pods\" style=\"position:relative;\"><a href=\"#multi-container-pods\" aria-label=\"multi container pods permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Multi Container PODs</h3>\n<p><code class=\"language-text\">kubectl -n elastic-stack exec -it app -- cat /log/app.log</code></p>\n<p><strong>Q. Edit the pod to add a sidecar container to send logs to Elastic Search. Mount the log volume to the sidecar container.</strong></p>\n<p><em>아니 이거 사이드카 붙이는 건데, 이런 것도 다 외워야하는거 아니겠지???????</em></p>\n<p><strong>Only add a new container. Do not modify anything else. Use the spec provided below.</strong></p>\n<p><span style=\"color:#c90035\">k8s.io/docs 문서에서 Configure a Pod to Use a Volume for Storage 참고 (search keyword for me : volume mount😃) </span></p>\n<blockquote>\n<p><strong>CheckCompleteIncomplete</strong></p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Name: app\nContainer Name: sidecar\nContainer Image: kodekloud/filebeat-configured\nVolume Mount: log-volume\nMount Path: /var/log/event-simulator/\nExisting Container Name: app\nExisting Container Image: kodekloud/event-simulator</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Pod\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> app\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> elastic<span class=\"token punctuation\">-</span>stack\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> app\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> app\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> kodekloud/event<span class=\"token punctuation\">-</span>simulator\n    <span class=\"token key atrule\">volumeMounts</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">mountPath</span><span class=\"token punctuation\">:</span> /log\n      <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> log<span class=\"token punctuation\">-</span>volume\n\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> sidecar\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> kodekloud/filebeat<span class=\"token punctuation\">-</span>configured\n    <span class=\"token key atrule\">volumeMounts</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">mountPath</span><span class=\"token punctuation\">:</span> /var/log/event<span class=\"token punctuation\">-</span>simulator/\n      <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> log<span class=\"token punctuation\">-</span>volume\n\n  <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> log<span class=\"token punctuation\">-</span>volume\n    <span class=\"token key atrule\">hostPath</span><span class=\"token punctuation\">:</span>\n      <span class=\"token comment\"># directory location on host</span>\n      <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /var/log/webapp\n      <span class=\"token comment\"># this field is optional</span>\n      <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> DirectoryOrCreate</code></pre></div>\n<h3 id=\"init-containers\" style=\"position:relative;\"><a href=\"#init-containers\" aria-label=\"init containers permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Init Containers</h3>\n<p>pod만드는데 여러개의 컨테이너가 뜰 때, 우선적으로 실행돼야하는 컨테이너가 있을 때 <code class=\"language-text\">initContainers</code>에 지정해서 사용. 안뜨면 pod가 계속 시도한다고 함!</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> blah\n  <span class=\"token punctuation\">...</span>\n\n  <span class=\"token key atrule\">initContainers</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> init<span class=\"token punctuation\">-</span>for<span class=\"token punctuation\">-</span>pod\n  <span class=\"token punctuation\">...</span></code></pre></div>","frontmatter":{"title":"[CKA] Section5. Application Lifecycle Management","date":"July 31, 2021"}}},"pageContext":{"slug":"/k8s/cka-application-lifecycle-management/","previous":{"fields":{"slug":"/k8s/cka-logging-and-monitoring/"},"frontmatter":{"title":"[CKA] Section4. Logging & Monitoring","category":"k8s","draft":false}},"next":{"fields":{"slug":"/k8s/cka-cluster-maintenance/"},"frontmatter":{"title":"[CKA] Section6. Cluster Maintenance","category":"k8s","draft":false}}}},"staticQueryHashes":["3128451518","521680639"]}