{"componentChunkName":"component---src-templates-blog-post-js","path":"/cloud/2019-01-17-docker-get-started-3/","result":{"data":{"site":{"siteMetadata":{"title":"Heeye Blog","author":"heeye","siteUrl":"https://heeyeah.github.io","comment":{"disqusShortName":"","utterances":"heeyeah/heeyeah.github.io"},"sponsor":{"buyMeACoffeeId":"heeyeah"}}},"markdownRemark":{"id":"17439994-7311-55df-b3f1-891ecd96826e","excerpt":"About Service service는 container > service > stack 중에 service를 말하는 것이다. 분산된 어플리케이션에서 각기 다른 앱조각들을 service라 한다. 예를 들어 video sharing site가 있다고 가정하면, 여긴 데이터베이스에 어플리케이션을 저장하는 서비스, 사용자가 뭔갈 업로드 후 백그라운드에서 video transcoding하는 서비스, frontend 서비스 등 많은 것이 합쳐져있다. Service are really just…","html":"<h3 id=\"about-service\" style=\"position:relative;\"><a href=\"#about-service\" aria-label=\"about service permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>About Service</h3>\n<p>service는 container > service > stack 중에 service를 말하는 것이다. 분산된 어플리케이션에서 각기 다른 앱조각들을 service라 한다. 예를 들어 video sharing site가 있다고 가정하면, 여긴 데이터베이스에 어플리케이션을 저장하는 서비스, 사용자가 뭔갈 업로드 후 백그라운드에서 video transcoding하는 서비스, frontend 서비스 등 많은 것이 합쳐져있다. <del>Service are really just “containers in production.”</del> 서비스는 하나의 이미지를 실행시키고 이미지가 어떻게 run하는지 코디한다. service scaling은 컨테이너 수를 바꾸는거다. scaling은 docker platform에서 매우 쉬운데, <code class=\"language-text\">docker-compose.yml</code>만 작성하면 된다.</p>\n<h3 id=\"docker-composeyml-file\" style=\"position:relative;\"><a href=\"#docker-composeyml-file\" aria-label=\"docker composeyml file permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>docker-compose.yml file</h3>\n<p>아무데나 docker-compose.yml 파일 만들자. 이 설정파일 내용을 읽고 load-balancing 한다. <strong>docker-compose.yml은 indentation이 중요하기 때문에</strong> 띄워쓰기 주의해야 한다.</p>\n<h3 id=\"run-new-load-balanced-app\" style=\"position:relative;\"><a href=\"#run-new-load-balanced-app\" aria-label=\"run new load balanced app permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Run new load-balanced app</h3>\n<p>docker-compose.yml 파일을 설정한 후 <code class=\"language-text\">docker swarm init</code> 을 해주면 swarm (load-balancing) 이 동작하고, <code class=\"language-text\">docker stack deploy -c docker-compose.yml getstartedlab</code> 하면 appname을 <code class=\"language-text\">getstartedlab</code> 이라고 주게 된다. 여기서 docker-compose.yml을 참고해서 image를 deploy하는데, 동작 후 <code class=\"language-text\">docker service ls</code> 로 확인!</p>\n<h3 id=\"신기한게\" style=\"position:relative;\"><a href=\"#%EC%8B%A0%EA%B8%B0%ED%95%9C%EA%B2%8C\" aria-label=\"신기한게 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>신기한게</h3>\n<p>똑같은 url인 <code class=\"language-text\">localhost:4000</code> 을 띄웠을 때 swarm init해서 container 5개로 서비스한 이미지는 hostname이 계속 바뀐다. <code class=\"language-text\">docker container ls -q</code> 에서 리스트업된 container IDS들이 뜬다. 이게 load-balancing인데 각 요청에 5개의 태스크 중 하나가 round-robin 방식으로 선택되고 응답을 준다.</p>\n<h3 id=\"scale-the-app\" style=\"position:relative;\"><a href=\"#scale-the-app\" aria-label=\"scale the app permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scale the app</h3>\n<p>docker-compose.yml 에 replicase 수정해서 docker stack deploy 다시 하면 update 되면서 scale the app!</p>\n<h3 id=\"take-down-the-app-and-the-swarm\" style=\"position:relative;\"><a href=\"#take-down-the-app-and-the-swarm\" aria-label=\"take down the app and the swarm permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Take down the app and the swarm</h3>\n<p><code class=\"language-text\">docekr stack rm getstartedlab</code> &#x26;&#x26; <code class=\"language-text\">docker swarm leave --force</code></p>\n<h3 id=\"result\" style=\"position:relative;\"><a href=\"#result\" aria-label=\"result permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>result😄</h3>\n<p>서비스는 컨테이너의 동작을 compose file에 codify하고, 이 파일은 앱을 scale, limit, redeploy 에 사용된다.</p>","frontmatter":{"title":"[Docker] Docker Get Started 따라하기 - 3","date":"January 21, 2019"}}},"pageContext":{"slug":"/cloud/2019-01-17-docker-get-started-3/","previous":{"fields":{"slug":"/cloud/2019-01-17-docker-get-started-2/"},"frontmatter":{"title":"[Docker] Docker Get Started 따라하기 - 2","category":"cloud","draft":false}},"next":{"fields":{"slug":"/cloud/2019-01-17-docker-get-started-4/"},"frontmatter":{"title":"[Docker] Docker Get Started 따라하기 - 4","category":"cloud","draft":false}}}},"staticQueryHashes":["3128451518","521680639"]}