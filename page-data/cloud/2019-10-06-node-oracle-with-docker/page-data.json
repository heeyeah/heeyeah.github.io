{"componentChunkName":"component---src-templates-blog-post-js","path":"/cloud/2019-10-06-node-oracle-with-docker/","result":{"data":{"site":{"siteMetadata":{"title":"Heeye Blog","author":"heeye","siteUrl":"https://heeyeah.github.io","comment":{"disqusShortName":"","utterances":"JaeYeopHan/gatsby-starter-bee"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"ae3995df-8e07-5245-badd-0bbebc53ec17","excerpt":"Node + node-oracledb + oracle client = Custom Container Container로 동작할 수 있는 node image가 있어야 하는데, oracle DB 연결이 가능해야 한다.\nNode에서 Oracle DB 연결을 위해선 client 설치와 환경설정만 하면 간단하다. 먼저 Dockerfile 작성 Dockerfile과 동일 위치에 toContainer 디렉토리를 만든 후 컨테이너로 copy해야 할 파일 목록들을 옮겨놨다. package.json dbconfig…","html":"<h2 id=\"node--node-oracledb--oracle-client--custom-container\" style=\"position:relative;\"><a href=\"#node--node-oracledb--oracle-client--custom-container\" aria-label=\"node  node oracledb  oracle client  custom container permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Node + node-oracledb + oracle client = Custom Container</h2>\n<p>Container로 동작할 수 있는 node image가 있어야 하는데, oracle DB 연결이 가능해야 한다.\nNode에서 Oracle DB 연결을 위해선 client 설치와 환경설정만 하면 간단하다.</p>\n<p><strong>먼저 Dockerfile 작성</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"dockerfile\"><pre class=\"language-dockerfile\"><code class=\"language-dockerfile\"><span class=\"token comment\">#https://blogs.oracle.com/opal/dockerfiles-for-node-oracledb-are-easy-and-simple 참고</span>\n<span class=\"token keyword\">FROM</span> oraclelinux<span class=\"token punctuation\">:</span>7<span class=\"token punctuation\">-</span>slim\n\n<span class=\"token keyword\">RUN</span>  yum <span class=\"token punctuation\">-</span>y install oracle<span class=\"token punctuation\">-</span>release<span class=\"token punctuation\">-</span>el7 oracle<span class=\"token punctuation\">-</span>nodejs<span class=\"token punctuation\">-</span>release<span class=\"token punctuation\">-</span>el7 &amp;&amp; \\\n     yum<span class=\"token punctuation\">-</span>config<span class=\"token punctuation\">-</span>manager <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>disable ol7_developer_EPEL &amp;&amp; \\\n     yum <span class=\"token punctuation\">-</span>y install oracle<span class=\"token punctuation\">-</span>instantclient19.3<span class=\"token punctuation\">-</span>basiclite nodejs &amp;&amp; \\\n     rm <span class=\"token punctuation\">-</span>rf /var/cache/yum\n\n<span class=\"token keyword\">WORKDIR</span> /myapp\n<span class=\"token keyword\">COPY</span> toContainer/ /myapp/\n\n<span class=\"token keyword\">RUN</span> npm install\n\n<span class=\"token keyword\">CMD</span> exec node select1.js</code></pre></div>\n<p>Dockerfile과 동일 위치에 toContainer 디렉토리를 만든 후 컨테이너로 copy해야 할 파일 목록들을 옮겨놨다.</p>\n<ul>\n<li>package.json</li>\n<li>dbconfig.js</li>\n<li>select1.js</li>\n</ul>\n<p><strong>package.json</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"hee-test\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1.0.0\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"private\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Test App\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"oracledb\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"^3.1\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"author\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Hee\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"license\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"MIT\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>dbconfig.js</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  user          <span class=\"token operator\">:</span> <span class=\"token string\">\"system\"</span><span class=\"token punctuation\">,</span>\n  password      <span class=\"token operator\">:</span> <span class=\"token string\">'oracle'</span><span class=\"token punctuation\">,</span>\n  connectString <span class=\"token operator\">:</span> <span class=\"token string\">\"172.17.0.2/xe\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>select1.js</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> oracledb <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'oracledb'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> dbConfig <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./dbconfig'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'start to connect oracle-node!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\noracledb<span class=\"token punctuation\">.</span>autoCommit <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\noracledb<span class=\"token punctuation\">.</span><span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">{</span>\n    user          <span class=\"token operator\">:</span> dbConfig<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">,</span>\n    password      <span class=\"token operator\">:</span> dbConfig<span class=\"token punctuation\">.</span>password<span class=\"token punctuation\">,</span>\n    connectString <span class=\"token operator\">:</span> dbConfig<span class=\"token punctuation\">.</span>connectString\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> connection</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n\n   <span class=\"token keyword\">var</span> query <span class=\"token operator\">=</span> <span class=\"token string\">'SELECT SEQ_NUM, USER_ID, USER_NAME, PROFILE FROM system.SHBEMP'</span><span class=\"token punctuation\">;</span>\n\n    connection<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span>query<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> result</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token function\">doRelease</span><span class=\"token punctuation\">(</span>connection<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>metaData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>rows<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">doRelease</span><span class=\"token punctuation\">(</span>connection<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">doRelease</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">connection</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  connection<span class=\"token punctuation\">.</span><span class=\"token function\">release</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이렇게 구성한 뒤에 build, run 과정은 아래와 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">docker build -t nodeoracle:hee-test .\ndocker run nodeoracle:hee-test\n\n#아래와 같이 출력\n#====================================================================\nstart to connect oracle-node!\n[ { name: &#39;SEQ_NUM&#39; },\n  { name: &#39;USER_ID&#39; },\n  { name: &#39;USER_NAME&#39; },\n  { name: &#39;PROFILE&#39; } ]\n[ [ 1, &#39;19200889&#39;, &#39;HEEYE&#39;, &#39;graduate SKKU, join Shinhan Bank&#39; ],\n  [ 2, &#39;19200900&#39;, &#39;CRUSH&#39;, &#39;My best singer XD&#39; ] ]\n\n# container에 들어가고 싶으면!\ndocker run -it nodeoracle:hee-test /bin/bash</code></pre></div>","frontmatter":{"title":"[Node] Node + Oracle 연결이 가능한 Container Image 만들기","date":"October 06, 2019"}}},"pageContext":{"slug":"/cloud/2019-10-06-node-oracle-with-docker/","previous":{"fields":{"slug":"/cloud/2019-10-06-node-oracle/"},"frontmatter":{"title":"[Node] Node + Oracle 연결하기","category":"node","draft":false}},"next":{"fields":{"slug":"/java/2020-01-17-java-parallel/"},"frontmatter":{"title":"parallel programming","category":"java","draft":false}}}},"staticQueryHashes":["3128451518","521680639"]}