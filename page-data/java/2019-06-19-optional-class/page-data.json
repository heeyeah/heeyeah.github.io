{"componentChunkName":"component---src-templates-blog-post-js","path":"/java/2019-06-19-optional-class/","result":{"data":{"site":{"siteMetadata":{"title":"Heeye Blog","author":"heeye","siteUrl":"https://heeyeah.github.io","comment":{"disqusShortName":"","utterances":"heeyeah/heeyeah.github.io"},"sponsor":{"buyMeACoffeeId":"heeyeah"}}},"markdownRemark":{"id":"a96e5485-3b8c-59cd-878c-bc6d189314e1","excerpt":"자바에서 null을 안전하게 다루는 방법 Spring Camp 2019에서 들었던 세미나 중 유익했던 세션 중 하나이다. java에서 null은 특별한 값이 없음을 나타내기 위해 설계됐고 이 값을 사용하려고 할 때 오류를 내도록 설계했다. 여기서 null을 다루는 자바의 기본 장치를 소개하는데 단정문(assertion) method 지원(isNull, nonNull, req) Optional 모든 메소드는 null을 절대 반환하지 마라. Optional…","html":"<h3 id=\"자바에서-null을-안전하게-다루는-방법\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94%EC%97%90%EC%84%9C-null%EC%9D%84-%EC%95%88%EC%A0%84%ED%95%98%EA%B2%8C-%EB%8B%A4%EB%A3%A8%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"자바에서 null을 안전하게 다루는 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바에서 null을 안전하게 다루는 방법</h3>\n<p>Spring Camp 2019에서 들었던 세미나 중 유익했던 세션 중 하나이다. java에서 null은 특별한 값이 없음을 나타내기 위해 설계됐고 이 값을 사용하려고 할 때 오류를 내도록 설계했다. 여기서 null을 다루는 자바의 기본 장치를 소개하는데</p>\n<ul>\n<li>단정문(assertion)</li>\n<li>method 지원(isNull, nonNull, req)</li>\n<li>\n<p>Optional</p>\n<ul>\n<li>모든 메소드는 null을 절대 반환하지 마라.</li>\n<li>Optional을 필드, 메서드 매개변수, 집합 자료명에 쓰지마라.</li>\n</ul>\n</li>\n</ul>\n<p>이 항목 중에 Optional Interface에 대한 짧은 소개가 나오고, 사실 Optional 설계는 잘 안된 편이라 문제가 많다고도 연설자가 리뷰를 했었다. Optional이 뭔지를 알아야 잘못됐네 안됐라도 따질 수 있기 때문에 기록해둔다.</p>\n<br/>\n### 개념\n<p>java8에서  <code class=\"language-text\">java.util.Optional&lt;T&gt;</code> 라는 새로운 클래스를 도입했다.</p>\n<p> <strong>Optional은 존재할 수도 있지만 안할수도 있는 객체, 즉 null이 될 수도 있는 객체를 감싸고 있는 일종의 래퍼 클래스</strong> 이다.\nOptional 은 만약에 값이 있으면  isPresent() 는 true를 반환하고  get()  메소드는 값을 반환한다. 추가적인 메소드로  orElse() 와 같이 값이 있는지 없는지 모를 때 쓰는 메소드도 존재한다.</p>\n<br/>\n<h3 id=\"optional-instance-만드는-법\" style=\"position:relative;\"><a href=\"#optional-instance-%EB%A7%8C%EB%93%9C%EB%8A%94-%EB%B2%95\" aria-label=\"optional instance 만드는 법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Optional instance 만드는 법</h3>\n<p>Optional instance는 어떻게 만들까? 면접 질문으로 받았었는데, Optional 클래스를 알고 있었다면 너무 쉬운 질문이었다…</p>\n<p>Optional의 instance는 Optional 클래스 내부에 <strong>static method</strong> 3방법으로 생성할 수 있다. 종류는 다음과 같다.</p>\n<ul>\n<li><strong>static <T> Optional<T> empty()</strong></li>\n</ul>\n<p>empty Optional instance를 반환한다. null을 담고 있는, 비어있는 Optional 객체를 얻어온다.</p>\n<ul>\n<li><strong>static <T> Optional<T> of(T value)</strong></li>\n</ul>\n<p>non-null value인 특정 값을 가지고 있는 Optional 객체를 반환한다. value가 null이면  NullPointerException 을 던진다.</p>\n<ul>\n<li><strong>static <T> Optional<T> ofNullable(T value)</strong></li>\n</ul>\n<p>특정 value를 담은 Optional 객체인데 만약 값이 non-null이면 value를 반환하고 그렇지 않으면 empty Optional을 반환한다.  empty()  메소드와  of(value)  메소드가 합쳐진 형태라고 생각하면 된다.</p>\n<br/>\n<h3 id=\"optional이-담고-있는-객체-접근-방법\" style=\"position:relative;\"><a href=\"#optional%EC%9D%B4-%EB%8B%B4%EA%B3%A0-%EC%9E%88%EB%8A%94-%EA%B0%9D%EC%B2%B4-%EC%A0%91%EA%B7%BC-%EB%B0%A9%EB%B2%95\" aria-label=\"optional이 담고 있는 객체 접근 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Optional이 담고 있는 객체 접근 방법</h3>\n<p>Optional 클래스의 instance method를 사용해 접근할 수 있으며</p>\n<ul>\n<li>get()</li>\n<li>orElse(T other)</li>\n<li>orElseGet(Supplier&#x3C;? extends T> other)</li>\n<li>orElseThrow(Supplier&#x3C;? extends X> exceptionSupplier)</li>\n<li>etc\n등의 메소드가 존재한다.</li>\n</ul>\n<br/>\n### 참고\n[Optional Reference Docs](https://docs.oracle.com/javase/8/docs/api/java/util/Optional.html)","frontmatter":{"title":"Optional이란?","date":"June 19, 2019"}}},"pageContext":{"slug":"/java/2019-06-19-optional-class/","previous":{"fields":{"slug":"/algorithm/2019-06-10-search-algorithms/"},"frontmatter":{"title":"Search Algorithm Basic","category":"algorithm","draft":false}},"next":{"fields":{"slug":"/seminar/2019-08-29-if-kakao-conference-2019-session1/"},"frontmatter":{"title":"[if kakao 개발자 컨퍼런스 2019] 오픈소스 데이터베이스, 흐르는 은행 데이터에 빨대를 꽂아보다.","category":"seminar","draft":false}}}},"staticQueryHashes":["3128451518","521680639"]}