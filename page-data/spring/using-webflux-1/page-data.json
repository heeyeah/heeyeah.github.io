{"componentChunkName":"component---src-templates-blog-post-js","path":"/spring/using-webflux-1/","result":{"data":{"site":{"siteMetadata":{"title":"Heeye Blog","author":"heeye","siteUrl":"https://heeyeah.github.io","comment":{"disqusShortName":"","utterances":"heeyeah/heeyeah.github.io"},"sponsor":{"buyMeACoffeeId":"heeyeah"}}},"markdownRemark":{"id":"0029a844-b773-5da3-a74a-0478a4d037ca","excerpt":"0. START spring webflux를 활용하여 RestAPI를 만드는 과정을 기록하고자 한다. 1. 개발환경 구성 개발환경은 아래와 같습니다. mac / intellij maven build java 1.8 프로젝트 생성 인텔리제이는 익숙한 툴은 아니지만, 익숙해지려고 많이 사용하는 중이다. 😊  에서 Java8과 Maven만 선택 후 기본 프로젝트를 생성했다. maven의 dependency가 정의되는 에는 필요한 라이브러리를 넣어서 빌드했다. 아래는 에서 dependency…","html":"<h2 id=\"0-start\" style=\"position:relative;\"><a href=\"#0-start\" aria-label=\"0 start permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>0. START</h2>\n<p>spring webflux를 활용하여 RestAPI를 만드는 과정을 기록하고자 한다.</p>\n<h2 id=\"1-개발환경-구성\" style=\"position:relative;\"><a href=\"#1-%EA%B0%9C%EB%B0%9C%ED%99%98%EA%B2%BD-%EA%B5%AC%EC%84%B1\" aria-label=\"1 개발환경 구성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 개발환경 구성</h2>\n<p>개발환경은 아래와 같습니다.</p>\n<ul>\n<li>mac / intellij</li>\n<li>maven build</li>\n<li>java 1.8</li>\n</ul>\n<h3 id=\"프로젝트-생성\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%83%9D%EC%84%B1\" aria-label=\"프로젝트 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트 생성</h3>\n<p>인텔리제이는 익숙한 툴은 아니지만, 익숙해지려고 많이 사용하는 중이다. 😊</p>\n<p><code class=\"language-text\">File &gt; New &gt; Project..</code> 에서 Java8과 Maven만 선택 후 기본 프로젝트를 생성했다. maven의 dependency가 정의되는 <code class=\"language-text\">pom.xml</code>에는 필요한 라이브러리를 넣어서 빌드했다. 아래는 <code class=\"language-text\">pom.xml</code>에서 dependency 부분만 기재했다!</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>parent</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-starter-parent<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>2.3.2.RELEASE<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>relativePath</span><span class=\"token punctuation\">/></span></span> <span class=\"token comment\">&lt;!-- lookup parent from repository --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>parent</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependencies</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-starter-webflux<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependencies</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h2 id=\"2-도메인\" style=\"position:relative;\"><a href=\"#2-%EB%8F%84%EB%A9%94%EC%9D%B8\" aria-label=\"2 도메인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 도메인</h2>\n<p>스타벅스 커피 주문하기를 도메인으로 잡아도 되긴 하지만, 기왕하는 거 재밌는 걸로 하고 싶어서 정한 건 <code class=\"language-text\">특정 지역을 기준으로 은행을 검색했을 때 주변 은행 정보</code>이다.</p>\n<p>특정 지역이면 <code class=\"language-text\">집</code>이나 <code class=\"language-text\">회사</code> 등, 특정해서 반경 어느 정도 범위 안에 있는 은행 목록들을 출력해주는 것!\n카카오 개발자 API를 예-전에 한번 써본 적이 있는데, 재밌었던 경험이어서 다시 끄집어내서 해보려고 한다😎</p>\n<h2 id=\"3-blah\" style=\"position:relative;\"><a href=\"#3-blah\" aria-label=\"3 blah permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. blah</h2>\n<p>기록해놔야겠다고 마음 먹었으나 <del>귀찮아서</del> 얼마나 해놓을 진 모르겠다.</p>","frontmatter":{"title":"using webflux 1. 개발환경 셋팅 (라이브러리 등)","date":"September 21, 2020"}}},"pageContext":{"slug":"/spring/using-webflux-1/","previous":{"fields":{"slug":"/diary/convert-blog-theme/"},"frontmatter":{"title":"jekyll에서 gatsby로, 블로그 리모델링하기🥳","category":"diary","draft":false}},"next":{"fields":{"slug":"/java/memory-leaks-intro/"},"frontmatter":{"title":"memory leak. 서론 - 왜 이걸 정리하는지?","category":"java","draft":false}}}},"staticQueryHashes":["3128451518","521680639"]}